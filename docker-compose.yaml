services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: prod
    restart: unless-stopped
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    environment:
      PORT: ${SERVER_PORT}
      DB_HOST: database
      DB_PORT: ${DB_PORT}
      DB_DATABASE_NAME: ${DB_DATABASE_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - dashnest_net
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - 5173:5173
    networks:
      - dashnest_net
  database:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./local_db_data:/var/lib/postgresql/data  # Database data in local directory
      - ./backend/cmd/migrate/migrations:/docker-entrypoint-initdb.d  # Migrations
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_DATABASE_NAME}'"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - dashnest_net

networks:
  dashnest_net: